/**
  ******************************************************************************
  * @file           : 代码日记
  * @brief          : 
  ******************************************************************************
  * @attention 本文档用于对四足不同时间的备份文档进行说明
  *
  *
  ******************************************************************************
  */

/**
  * @brief   9月12日备份文件
  * @param   
  * @retval  
  * @attention  
  */
本次将单腿任务移植到RTOS系统中，并且对于代码结构也进行了一定的优化
要点：
    1、关于代码结构的优化
      优化主要体现在初始化的过程中
      将总数据进行分块：（1）连杆相关数据
						          （2）轨迹相关数据
      开始先定义总数据结构体变量，对总数据进行初始化时使用指针；
      对下属的模块定义静态全局变量，对静态全局变量进行初始化，再将
      静态全局变量的地址存储在总数据结构体变量中。
      优点：我可以在外部直接对静态全局变量进行修改，不需要对总数据变量
      进行赋值，就可以改变对应的数据。

      首先明确单腿任务分为几个模块，对各模块分配相应的数据存储空间（静态全局型）。
      这时总数据结构体中只需要定义相应模块的指针型变量，初始化时对相应模块进行
      数据初始化后将地址赋值给总数据结构体中的地址型变量即可。

/**
  * @brief   9月13日备份文件
  * @param   
  * @retval  
  * @attention  
  */
本次将单腿整个任务部署完毕，新添加摆线轨迹并在Trajectory_typedef中增加相应参数。

/**
  * @brief   9月22日备份文件
  * @param   
  * @retval  
  * @attention  
  */
此前一直没有更新代码日志
本次将四足整机调试完毕并将一些控制接口引出，便于与遥控进行联动或者后续添加
陀螺仪进行姿态控制。
具体的整体代码流程见Legged_Freertos文件夹下的pdf文件。

/**
  * @brief   9月28日备份文件
  * @param   
  * @retval  
  * @attention  
  */
本次修改增加了串口通信协议。
  协议内容：上位机发送字符串'M1XXOK'
          其中XX为数字，如为01表示前进，02表示后退，03表示原地转圈

/**
  * @brief   10月8日备份文件
  * @param   
  * @retval  
  * @attention  
  */
本次修改了bsp_uart,将数据接收与处理单独放如remote.c文件中，通过对应数据输出判断用户命令。

/**
  * @brief   10月22日对串口通信协议的说明
  * @param   
  * @retval  
  * @attention  
  */
包头：M1
数据帧：01；02；03；04（表示前进；后退；左转；右转，这个自己实际测试一下，
						如果有问题直接更改一下预编译就可以了）
包尾：OK
